// leins, 16.04.2018

#include <cmath>
#include "euler_koshi.h"

using namespace std;

vector<double> Shooting(double y0)
{
    const int kMax = 4;
    vector<double> x, y, z;
    double h = (B - A) / NUM_OF_NODES;
    x = BuildGrid();
    double firstVal = A;
    double isOk = 0;

    do
    {
      y.clear();
      z.clear();
      y.push_back(y0);
      z.push_back(firstVal);

      for (int j = 1; j <= NUM_OF_NODES; j++)
      {
        double newY = y[j - 1] + h * z[j - 1];
        double newZ = z[j - 1] + h * F2(x[j - 1], y[j-1], z[j-1]);

        z.push_back(newZ);
        y.push_back(newY);
        for (int i = 0; i < kMax; i++)
        {
          newY = y[j - 1] + h / 2 * (z[j-1] + z[j]);
          newZ = z[j - 1] + h / 2 * (F2(x[j - 1], y[j - 1], z[j - 1]) + F2(x[j], y[j], z[j]));

          z.pop_back();
          z.push_back(newZ);
          y.pop_back();
          y.push_back(newY);
        }
      }
      isOk = LAST_VAL - y.back();
      if (isOk > 0)
        firstVal += h;
      else
        firstVal -= h;

    }while (fabs(isOk) >= E);

    return y;
}
